import openpyxl
from openpyxl.styles import Font, Alignment, Border, Side
from bs4 import BeautifulSoup
import requests
from inc.config import URL_XML, PATH_XLSX_FILE

def get_list_contact():
    resource = requests.get(URL_XML)
    soup = BeautifulSoup(resource.text, "xml")
    dictionary = {}
    surnames = {}
    phonerecords = []
    additional = {}
    mainnumber = {}

    for menu in soup.findAll("Menu"):
        menu_name = menu.get("Name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –º–µ–Ω—é")
        menu_number = menu.get("Number", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –Ω–æ–º–µ—Ä")
        for tag in menu.find_all("Unit"):
            additional[tag["Phone1"]] = tag["Name"]
            mainnumber[tag["Phone2"]] = tag["Name"]
            
            surname = tag["Name"].split()[0]
            if surname not in surnames:
                surnames[surname] = []
            surnames[surname].append(tag["Name"])

            phone1 = tag.get("Phone1", "")
            phone2 = tag.get("Phone2", "")
            phone2_str = f'üì±–¢–µ–ª–µ—Ñ–æ–Ω: {phone2}' if phone2 else ""

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è –¥–æ–±–∞–≤–æ—á–Ω–æ–≥–æ –∫–æ–¥–∞, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
            phone1_str = f'‚òéÔ∏è–î–æ–±–∞–≤–æ—á–Ω—ã–π –∫–æ–¥: {phone1}' if phone1 else ""

            # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å—Ç—Ä–æ–∫–∏ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π
            phone_info = "\n".join(filter(None, [phone1_str, phone2_str]))

            dictionary[tag["Name"]] = (
                f'\nüë§{tag["Name"]} {(tag.get("Middle") or "")}\n'
                f'üè¢{menu_name} {menu_number}\n'
                f'{phone_info}'
            )

            phonerecords.append(
                f'______________________________\n'
                f'üë§–§–ò–û: {tag["Name"]} {(tag.get("Middle") or "")}\n'
                f'üè¢{menu_name} {menu_number}\n'
                f'{phone_info}'
            )

    # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ phonerecords –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–≥–∞ NAME
    phonerecords.sort(key=lambda record: record.split('\n')[1].split(': ')[1])

    return dictionary, phonerecords, surnames, additional, mainnumber

def get_unit_contact(name):
    contacts = get_list_contact()
    phones = contacts[0]
    surnames = contacts[2]
    additional = contacts[3]
    mainnumber = contacts[4]
    error = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É –Ω–µ—Ç'
    nametitle = name.title()

    if name.startswith('8') and len(name) > 3:
        result = phones.get(mainnumber.get(name))
        return result if result else error
    elif name.isdigit():
        print(type(name))
        result = phones.get(additional.get(name))
        return result if result else error
    else:
        if surnames.get(nametitle) is not None:
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–º–µ–Ω –ø–æ —Ñ–∞–º–∏–ª–∏–∏
            name_list = surnames.get(nametitle)
            # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤
            phone_numbers = [phones.get(n) for n in name_list if phones.get(n) is not None]
            if phone_numbers:
                # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—ã–≤–æ–¥
                formatted_output = "\n_________________________\n".join(phone_numbers)
                return formatted_output
            else:
                return error
        else:
            result = phones.get(nametitle)
            return result if result else error

def getpagephones():
    pagephones = []
    for i in range(0, len(get_list_contact()[1]), 10):
        pagephones.append(get_list_contact()[1][i:i+10])
    return pagephones
    
def generate_xlsx():
    response = requests.get(URL_XML)
    soup = BeautifulSoup(response.content, 'xml')

    departments = {} 

    for menu in soup.find_all('Menu'):
        department_name = menu.get('Name')
        department_phone = menu.get('Number', '')

        for unit in menu.find_all('Unit'):
            unit_name = unit.get('Name')
            unit_middle = unit.get('Middle')
            internal_phone = unit.get('Phone1')
            corporate_phone = unit.get('Phone2')
            unit_email = unit.get('Email')
            unit_job_title = unit.get('JobTitle')

            contact = {
                'Name': unit_name,
                'Middle': unit_middle,
                'JobTitle': unit_job_title,
                'InternalPhone': internal_phone,
                'CorporatePhone': corporate_phone,
                'Email': unit_email,
            }

            if department_name not in departments:
                departments[department_name] = {'phone': department_phone, 'contacts': []}
            departments[department_name]['contacts'].append(contact)

    workbook = openpyxl.Workbook()
    sheet = workbook.active
    sheet.title = '–õ–∏—Å—Ç 1'

    # –®—Ä–∏—Ñ—Ç –¥–ª—è –≤—Å–µ–π —Ç–∞–±–ª–∏—Ü—ã
    default_font = Font(name='Franklin Gothic Book', size=12)

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    sheet.merge_cells('A1:E1')
    title_cell = sheet['A1']
    title_cell.value = '–°–ø–∏—Å–æ–∫ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –û–û–û "–ë–ú–£ –ì–≠–ú"'
    title_cell.font = Font(name='Franklin Gothic Book', size=12, bold=True)
    title_cell.alignment = Alignment(horizontal='center', vertical='center')

    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å—Ç–æ–ª–±—Ü–æ–≤
    headers = ["–§–ò–û", "–î–æ–ª–∂–Ω–æ—Å—Ç—å", "–í–Ω—É—Ç—Ä.", "–°–æ—Ç–æ–≤—ã–π —Ç–µ–ª.", "–≠–ª.–ø–æ—á—Ç–∞"]
    sheet.append(headers)
    for col in range(1, 6):
        cell = sheet.cell(row=2, column=col)
        cell.font = default_font
        cell.alignment = Alignment(horizontal='center', vertical='center')

    def add_department_contacts(department, phone, contacts):
        department_with_phone = f"{department}, –≥–æ—Ä–æ–¥—Å–∫–æ–π —Ç–µ–ª. {phone}" if phone else department
        sheet.append([department_with_phone, "", "", "", ""])
        sheet.merge_cells(start_row=sheet.max_row, start_column=1, end_row=sheet.max_row, end_column=5)
        department_cell = sheet.cell(row=sheet.max_row, column=1)
        department_cell.font = Font(name='Franklin Gothic Book', bold=True)
        department_cell.alignment = Alignment(horizontal='center', vertical='center')

        for contact in contacts:
            sheet.append([
                f"{contact['Name']} {contact['Middle']}",
                contact['JobTitle'],
                contact['InternalPhone'],
                contact['CorporatePhone'],
                contact['Email']
            ])
            for col in range(1, 6):
                cell = sheet.cell(row=sheet.max_row, column=col)
                cell.font = default_font
                if col == 1 or col == 2 or col == 5:
                    cell.alignment = Alignment(horizontal='left', vertical='center')
                else:
                    cell.alignment = Alignment(horizontal='center', vertical='center')

    irkutsk_departments = ["–ê–£–ü –ò—Ä–∫—É—Ç—Å–∫", "–î–ü–≠–°", "–ò—Ä–∫—É—Ç—Å–∫–∏–π —Ñ–∏–ª–∏–∞–ª", "–î–æ—Ä–æ–∂–Ω–∞—è 1"]
    bratsk_departments = ["–ê–£–ü –ë—Ä–∞—Ç—Å–∫", "–ë—Ä–∞—Ç—Å–∫–∞—è –ü–ª–æ—â–∞–¥–∫–∞", "–ù–∞–ª–∞–¥–∫–∞"]

    # –ì–æ—Ä–æ–¥ –ò—Ä–∫—É—Ç—Å–∫
    sheet.append(["–≥–æ—Ä–æ–¥ –ò—Ä–∫—É—Ç—Å–∫", "", "", "", ""])
    sheet.merge_cells(start_row=sheet.max_row, start_column=1, end_row=sheet.max_row, end_column=5)
    city_cell = sheet.cell(row=sheet.max_row, column=1)
    city_cell.font = Font(name='Franklin Gothic Book', bold=True, size=14)
    city_cell.alignment = Alignment(horizontal='center', vertical='center')

    for department in irkutsk_departments:
        if department in departments:
            contacts = departments[department]['contacts']
            phone = departments[department]['phone']
            contacts.sort(key=lambda x: (x.get("Name", ""), x.get("Middle", "")))
            add_department_contacts(department, phone, contacts)

    # –ì–æ—Ä–æ–¥ –ë—Ä–∞—Ç—Å–∫
    sheet.append(["–≥–æ—Ä–æ–¥ –ë—Ä–∞—Ç—Å–∫", "", "", "", ""])
    sheet.merge_cells(start_row=sheet.max_row, start_column=1, end_row=sheet.max_row, end_column=5)
    city_cell = sheet.cell(row=sheet.max_row, column=1)
    city_cell.font = Font(name='Franklin Gothic Book', bold=True, size=14)
    city_cell.alignment = Alignment(horizontal='center', vertical='center')

    for department in bratsk_departments:
        if department in departments:
            contacts = departments[department]['contacts']
            phone = departments[department]['phone']
            contacts.sort(key=lambda x: (x.get("Name", ""), x.get("Middle", "")))
            add_department_contacts(department, phone, contacts)

    # –û—Å—Ç–∞–ª—å–Ω—ã–µ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã
    remaining_departments = set(departments.keys()) - set(irkutsk_departments) - set(bratsk_departments)
    for department in remaining_departments:
        contacts = departments[department]['contacts']
        phone = departments[department]['phone']
        contacts.sort(key=lambda x: (x.get("Name", ""), x.get("Middle", "")))
        add_department_contacts(department, phone, contacts)

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≥—Ä–∞–Ω–∏—Ü
    thin_border = Border(left=Side(style='thin'), right=Side(style='thin'), top=Side(style='thin'), bottom=Side(style='thin'))
    for row in sheet.iter_rows(min_row=2, max_row=sheet.max_row, min_col=1, max_col=5):
        for cell in row:
            cell.border = thin_border

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —à–∏—Ä–∏–Ω—ã –∫–æ–ª–æ–Ω–æ–∫ –≤—Ä—É—á–Ω—É—é
    column_widths = {
        'A': 40,  # –®–∏—Ä–∏–Ω–∞ –¥–ª—è —Å—Ç–æ–ª–±—Ü–∞ "–§–ò–û"
        'B': 55,  # –®–∏—Ä–∏–Ω–∞ –¥–ª—è —Å—Ç–æ–ª–±—Ü–∞ "–î–æ–ª–∂–Ω–æ—Å—Ç—å"
        'C': 10,  # –®–∏—Ä–∏–Ω–∞ –¥–ª—è —Å—Ç–æ–ª–±—Ü–∞ "–í–Ω—É—Ç—Ä."
        'D': 20,  # –®–∏—Ä–∏–Ω–∞ –¥–ª—è —Å—Ç–æ–ª–±—Ü–∞ "–°–æ—Ç–æ–≤—ã–π —Ç–µ–ª."
        'E': 35   # –®–∏—Ä–∏–Ω–∞ –¥–ª—è —Å—Ç–æ–ª–±—Ü–∞ "–≠–ª.–ø–æ—á—Ç–∞"
    }
    for col, width in column_widths.items():
        sheet.column_dimensions[col].width = width

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    workbook.save(PATH_XLSX_FILE)
